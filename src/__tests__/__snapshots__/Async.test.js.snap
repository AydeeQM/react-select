// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`defaults - snapshot 1`] = `
<Async
  cacheOptions={false}
  defaultOptions={false}
>
  <StateManager
    cacheOptions={false}
    defaultInputValue=""
    defaultMenuIsOpen={false}
    defaultOptions={false}
    defaultValue={null}
    filterOption={null}
    isLoading={false}
    onInputChange={[Function]}
    options={Array []}
  >
    <Select
      backspaceRemovesValue={true}
      blurInputOnSelect={true}
      cacheOptions={false}
      captureMenuScroll={false}
      closeMenuOnScroll={false}
      closeMenuOnSelect={true}
      components={Object {}}
      controlShouldRenderValue={true}
      defaultInputValue=""
      defaultMenuIsOpen={false}
      defaultOptions={false}
      defaultValue={null}
      escapeClearsValue={false}
      filterOption={null}
      formatGroupLabel={[Function]}
      getOptionLabel={[Function]}
      getOptionValue={[Function]}
      inputValue=""
      isDisabled={false}
      isLoading={false}
      isMulti={false}
      isOptionDisabled={[Function]}
      isRtl={false}
      isSearchable={true}
      loadingMessage={[Function]}
      maxMenuHeight={300}
      menuIsOpen={false}
      menuPlacement="bottom"
      menuPosition="absolute"
      menuShouldBlockScroll={false}
      menuShouldScrollIntoView={true}
      minMenuHeight={140}
      noOptionsMessage={[Function]}
      onChange={[Function]}
      onInputChange={[Function]}
      onMenuClose={[Function]}
      onMenuOpen={[Function]}
      openMenuOnClick={true}
      openMenuOnFocus={false}
      options={Array []}
      pageSize={5}
      placeholder="Select..."
      screenReaderStatus={[Function]}
      styles={Object {}}
      tabIndex="0"
      tabSelectsValue={true}
      value={null}
    >
      <SelectContainer
        clearValue={[Function]}
        cx={[Function]}
        getStyles={[Function]}
        getValue={[Function]}
        hasValue={false}
        innerProps={
          Object {
            "id": undefined,
            "onKeyDown": [Function],
          }
        }
        isDisabled={false}
        isFocused={false}
        isMulti={false}
        isRtl={false}
        options={Array []}
        selectOption={[Function]}
        selectProps={
          Object {
            "backspaceRemovesValue": true,
            "blurInputOnSelect": true,
            "cacheOptions": false,
            "captureMenuScroll": false,
            "closeMenuOnScroll": false,
            "closeMenuOnSelect": true,
            "components": Object {},
            "controlShouldRenderValue": true,
            "defaultInputValue": "",
            "defaultMenuIsOpen": false,
            "defaultOptions": false,
            "defaultValue": null,
            "escapeClearsValue": false,
            "filterOption": null,
            "formatGroupLabel": [Function],
            "getOptionLabel": [Function],
            "getOptionValue": [Function],
            "inputValue": "",
            "isDisabled": false,
            "isLoading": false,
            "isMulti": false,
            "isOptionDisabled": [Function],
            "isRtl": false,
            "isSearchable": true,
            "loadingMessage": [Function],
            "maxMenuHeight": 300,
            "menuIsOpen": false,
            "menuPlacement": "bottom",
            "menuPosition": "absolute",
            "menuShouldBlockScroll": false,
            "menuShouldScrollIntoView": true,
            "minMenuHeight": 140,
            "noOptionsMessage": [Function],
            "onChange": [Function],
            "onInputChange": [Function],
            "onMenuClose": [Function],
            "onMenuOpen": [Function],
            "openMenuOnClick": true,
            "openMenuOnFocus": false,
            "options": Array [],
            "pageSize": 5,
            "placeholder": "Select...",
            "screenReaderStatus": [Function],
            "styles": Object {},
            "tabIndex": "0",
            "tabSelectsValue": true,
            "value": null,
          }
        }
        setValue={[Function]}
        theme={
          Object {
            "borderRadius": 4,
            "colors": Object {
              "danger": "#DE350B",
              "dangerLight": "#FFBDAD",
              "neutral0": "hsl(0, 0%, 100%)",
              "neutral10": "hsl(0, 0%, 90%)",
              "neutral20": "hsl(0, 0%, 80%)",
              "neutral30": "hsl(0, 0%, 70%)",
              "neutral40": "hsl(0, 0%, 60%)",
              "neutral5": "hsl(0, 0%, 95%)",
              "neutral50": "hsl(0, 0%, 50%)",
              "neutral60": "hsl(0, 0%, 40%)",
              "neutral70": "hsl(0, 0%, 30%)",
              "neutral80": "hsl(0, 0%, 20%)",
              "neutral90": "hsl(0, 0%, 10%)",
              "primary": "#2684FF",
              "primary25": "#DEEBFF",
              "primary50": "#B2D4FF",
              "primary75": "#4C9AFF",
            },
            "spacing": Object {
              "baseUnit": 4,
              "controlHeight": 38,
              "menuGutter": 8,
            },
          }
        }
      >
        <ForwardRef(render)
          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
          className=""
          css={
            Object {
              "boxSizing": "border-box",
              "direction": null,
              "pointerEvents": null,
              "position": "relative",
            }
          }
          onKeyDown={[Function]}
        >
          <div
            className=" css-1scatav-SelectContainer"
            onKeyDown={[Function]}
          >
            <Control
              clearValue={[Function]}
              cx={[Function]}
              getStyles={[Function]}
              getValue={[Function]}
              hasValue={false}
              innerProps={
                Object {
                  "onMouseDown": [Function],
                  "onTouchEnd": [Function],
                }
              }
              innerRef={[Function]}
              isDisabled={false}
              isFocused={false}
              isMulti={false}
              isRtl={false}
              menuIsOpen={false}
              options={Array []}
              selectOption={[Function]}
              selectProps={
                Object {
                  "backspaceRemovesValue": true,
                  "blurInputOnSelect": true,
                  "cacheOptions": false,
                  "captureMenuScroll": false,
                  "closeMenuOnScroll": false,
                  "closeMenuOnSelect": true,
                  "components": Object {},
                  "controlShouldRenderValue": true,
                  "defaultInputValue": "",
                  "defaultMenuIsOpen": false,
                  "defaultOptions": false,
                  "defaultValue": null,
                  "escapeClearsValue": false,
                  "filterOption": null,
                  "formatGroupLabel": [Function],
                  "getOptionLabel": [Function],
                  "getOptionValue": [Function],
                  "inputValue": "",
                  "isDisabled": false,
                  "isLoading": false,
                  "isMulti": false,
                  "isOptionDisabled": [Function],
                  "isRtl": false,
                  "isSearchable": true,
                  "loadingMessage": [Function],
                  "maxMenuHeight": 300,
                  "menuIsOpen": false,
                  "menuPlacement": "bottom",
                  "menuPosition": "absolute",
                  "menuShouldBlockScroll": false,
                  "menuShouldScrollIntoView": true,
                  "minMenuHeight": 140,
                  "noOptionsMessage": [Function],
                  "onChange": [Function],
                  "onInputChange": [Function],
                  "onMenuClose": [Function],
                  "onMenuOpen": [Function],
                  "openMenuOnClick": true,
                  "openMenuOnFocus": false,
                  "options": Array [],
                  "pageSize": 5,
                  "placeholder": "Select...",
                  "screenReaderStatus": [Function],
                  "styles": Object {},
                  "tabIndex": "0",
                  "tabSelectsValue": true,
                  "value": null,
                }
              }
              setValue={[Function]}
              theme={
                Object {
                  "borderRadius": 4,
                  "colors": Object {
                    "danger": "#DE350B",
                    "dangerLight": "#FFBDAD",
                    "neutral0": "hsl(0, 0%, 100%)",
                    "neutral10": "hsl(0, 0%, 90%)",
                    "neutral20": "hsl(0, 0%, 80%)",
                    "neutral30": "hsl(0, 0%, 70%)",
                    "neutral40": "hsl(0, 0%, 60%)",
                    "neutral5": "hsl(0, 0%, 95%)",
                    "neutral50": "hsl(0, 0%, 50%)",
                    "neutral60": "hsl(0, 0%, 40%)",
                    "neutral70": "hsl(0, 0%, 30%)",
                    "neutral80": "hsl(0, 0%, 20%)",
                    "neutral90": "hsl(0, 0%, 10%)",
                    "primary": "#2684FF",
                    "primary25": "#DEEBFF",
                    "primary50": "#B2D4FF",
                    "primary75": "#4C9AFF",
                  },
                  "spacing": Object {
                    "baseUnit": 4,
                    "controlHeight": 38,
                    "menuGutter": 8,
                  },
                }
              }
            >
              <ForwardRef(render)
                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                className=""
                css={
                  Object {
                    "&:hover": Object {
                      "borderColor": "hsl(0, 0%, 70%)",
                    },
                    "alignItems": "center",
                    "backgroundColor": "hsl(0, 0%, 100%)",
                    "borderColor": "hsl(0, 0%, 80%)",
                    "borderRadius": 4,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "boxShadow": null,
                    "boxSizing": "border-box",
                    "cursor": "default",
                    "display": "flex",
                    "flexWrap": "wrap",
                    "justifyContent": "space-between",
                    "minHeight": 38,
                    "outline": "0 !important",
                    "position": "relative",
                    "transition": "all 100ms",
                  }
                }
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
              >
                <div
                  className=" css-15k8r4l-Control"
                  onMouseDown={[Function]}
                  onTouchEnd={[Function]}
                >
                  <ValueContainer
                    clearValue={[Function]}
                    cx={[Function]}
                    getStyles={[Function]}
                    getValue={[Function]}
                    hasValue={false}
                    isDisabled={false}
                    isMulti={false}
                    isRtl={false}
                    options={Array []}
                    selectOption={[Function]}
                    selectProps={
                      Object {
                        "backspaceRemovesValue": true,
                        "blurInputOnSelect": true,
                        "cacheOptions": false,
                        "captureMenuScroll": false,
                        "closeMenuOnScroll": false,
                        "closeMenuOnSelect": true,
                        "components": Object {},
                        "controlShouldRenderValue": true,
                        "defaultInputValue": "",
                        "defaultMenuIsOpen": false,
                        "defaultOptions": false,
                        "defaultValue": null,
                        "escapeClearsValue": false,
                        "filterOption": null,
                        "formatGroupLabel": [Function],
                        "getOptionLabel": [Function],
                        "getOptionValue": [Function],
                        "inputValue": "",
                        "isDisabled": false,
                        "isLoading": false,
                        "isMulti": false,
                        "isOptionDisabled": [Function],
                        "isRtl": false,
                        "isSearchable": true,
                        "loadingMessage": [Function],
                        "maxMenuHeight": 300,
                        "menuIsOpen": false,
                        "menuPlacement": "bottom",
                        "menuPosition": "absolute",
                        "menuShouldBlockScroll": false,
                        "menuShouldScrollIntoView": true,
                        "minMenuHeight": 140,
                        "noOptionsMessage": [Function],
                        "onChange": [Function],
                        "onInputChange": [Function],
                        "onMenuClose": [Function],
                        "onMenuOpen": [Function],
                        "openMenuOnClick": true,
                        "openMenuOnFocus": false,
                        "options": Array [],
                        "pageSize": 5,
                        "placeholder": "Select...",
                        "screenReaderStatus": [Function],
                        "styles": Object {},
                        "tabIndex": "0",
                        "tabSelectsValue": true,
                        "value": null,
                      }
                    }
                    setValue={[Function]}
                    theme={
                      Object {
                        "borderRadius": 4,
                        "colors": Object {
                          "danger": "#DE350B",
                          "dangerLight": "#FFBDAD",
                          "neutral0": "hsl(0, 0%, 100%)",
                          "neutral10": "hsl(0, 0%, 90%)",
                          "neutral20": "hsl(0, 0%, 80%)",
                          "neutral30": "hsl(0, 0%, 70%)",
                          "neutral40": "hsl(0, 0%, 60%)",
                          "neutral5": "hsl(0, 0%, 95%)",
                          "neutral50": "hsl(0, 0%, 50%)",
                          "neutral60": "hsl(0, 0%, 40%)",
                          "neutral70": "hsl(0, 0%, 30%)",
                          "neutral80": "hsl(0, 0%, 20%)",
                          "neutral90": "hsl(0, 0%, 10%)",
                          "primary": "#2684FF",
                          "primary25": "#DEEBFF",
                          "primary50": "#B2D4FF",
                          "primary75": "#4C9AFF",
                        },
                        "spacing": Object {
                          "baseUnit": 4,
                          "controlHeight": 38,
                          "menuGutter": 8,
                        },
                      }
                    }
                  >
                    <ForwardRef(render)
                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                      className=""
                      css={
                        Object {
                          "WebkitOverflowScrolling": "touch",
                          "alignItems": "center",
                          "boxSizing": "border-box",
                          "display": "flex",
                          "flex": 1,
                          "flexWrap": "wrap",
                          "overflow": "hidden",
                          "padding": "2px 8px",
                          "position": "relative",
                        }
                      }
                    >
                      <div
                        className=" css-1hwfws3"
                      >
                        <Placeholder
                          clearValue={[Function]}
                          cx={[Function]}
                          getStyles={[Function]}
                          getValue={[Function]}
                          hasValue={false}
                          isDisabled={false}
                          isFocused={false}
                          isMulti={false}
                          isRtl={false}
                          key="placeholder"
                          options={Array []}
                          selectOption={[Function]}
                          selectProps={
                            Object {
                              "backspaceRemovesValue": true,
                              "blurInputOnSelect": true,
                              "cacheOptions": false,
                              "captureMenuScroll": false,
                              "closeMenuOnScroll": false,
                              "closeMenuOnSelect": true,
                              "components": Object {},
                              "controlShouldRenderValue": true,
                              "defaultInputValue": "",
                              "defaultMenuIsOpen": false,
                              "defaultOptions": false,
                              "defaultValue": null,
                              "escapeClearsValue": false,
                              "filterOption": null,
                              "formatGroupLabel": [Function],
                              "getOptionLabel": [Function],
                              "getOptionValue": [Function],
                              "inputValue": "",
                              "isDisabled": false,
                              "isLoading": false,
                              "isMulti": false,
                              "isOptionDisabled": [Function],
                              "isRtl": false,
                              "isSearchable": true,
                              "loadingMessage": [Function],
                              "maxMenuHeight": 300,
                              "menuIsOpen": false,
                              "menuPlacement": "bottom",
                              "menuPosition": "absolute",
                              "menuShouldBlockScroll": false,
                              "menuShouldScrollIntoView": true,
                              "minMenuHeight": 140,
                              "noOptionsMessage": [Function],
                              "onChange": [Function],
                              "onInputChange": [Function],
                              "onMenuClose": [Function],
                              "onMenuOpen": [Function],
                              "openMenuOnClick": true,
                              "openMenuOnFocus": false,
                              "options": Array [],
                              "pageSize": 5,
                              "placeholder": "Select...",
                              "screenReaderStatus": [Function],
                              "styles": Object {},
                              "tabIndex": "0",
                              "tabSelectsValue": true,
                              "value": null,
                            }
                          }
                          setValue={[Function]}
                          theme={
                            Object {
                              "borderRadius": 4,
                              "colors": Object {
                                "danger": "#DE350B",
                                "dangerLight": "#FFBDAD",
                                "neutral0": "hsl(0, 0%, 100%)",
                                "neutral10": "hsl(0, 0%, 90%)",
                                "neutral20": "hsl(0, 0%, 80%)",
                                "neutral30": "hsl(0, 0%, 70%)",
                                "neutral40": "hsl(0, 0%, 60%)",
                                "neutral5": "hsl(0, 0%, 95%)",
                                "neutral50": "hsl(0, 0%, 50%)",
                                "neutral60": "hsl(0, 0%, 40%)",
                                "neutral70": "hsl(0, 0%, 30%)",
                                "neutral80": "hsl(0, 0%, 20%)",
                                "neutral90": "hsl(0, 0%, 10%)",
                                "primary": "#2684FF",
                                "primary25": "#DEEBFF",
                                "primary50": "#B2D4FF",
                                "primary75": "#4C9AFF",
                              },
                              "spacing": Object {
                                "baseUnit": 4,
                                "controlHeight": 38,
                                "menuGutter": 8,
                              },
                            }
                          }
                        >
                          <ForwardRef(render)
                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Placeholder"
                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                            className=""
                            css={
                              Object {
                                "boxSizing": "border-box",
                                "color": "hsl(0, 0%, 50%)",
                                "marginLeft": 2,
                                "marginRight": 2,
                                "position": "absolute",
                                "top": "50%",
                                "transform": "translateY(-50%)",
                              }
                            }
                          >
                            <div
                              className=" css-eo1v21-Placeholder"
                            >
                              Select...
                            </div>
                          </ForwardRef(render)>
                        </Placeholder>
                        <Input
                          aria-autocomplete="list"
                          autoCapitalize="none"
                          autoComplete="off"
                          autoCorrect="off"
                          cx={[Function]}
                          getStyles={[Function]}
                          id="react-select-2-input"
                          innerRef={[Function]}
                          isDisabled={false}
                          isHidden={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          selectProps={
                            Object {
                              "backspaceRemovesValue": true,
                              "blurInputOnSelect": true,
                              "cacheOptions": false,
                              "captureMenuScroll": false,
                              "closeMenuOnScroll": false,
                              "closeMenuOnSelect": true,
                              "components": Object {},
                              "controlShouldRenderValue": true,
                              "defaultInputValue": "",
                              "defaultMenuIsOpen": false,
                              "defaultOptions": false,
                              "defaultValue": null,
                              "escapeClearsValue": false,
                              "filterOption": null,
                              "formatGroupLabel": [Function],
                              "getOptionLabel": [Function],
                              "getOptionValue": [Function],
                              "inputValue": "",
                              "isDisabled": false,
                              "isLoading": false,
                              "isMulti": false,
                              "isOptionDisabled": [Function],
                              "isRtl": false,
                              "isSearchable": true,
                              "loadingMessage": [Function],
                              "maxMenuHeight": 300,
                              "menuIsOpen": false,
                              "menuPlacement": "bottom",
                              "menuPosition": "absolute",
                              "menuShouldBlockScroll": false,
                              "menuShouldScrollIntoView": true,
                              "minMenuHeight": 140,
                              "noOptionsMessage": [Function],
                              "onChange": [Function],
                              "onInputChange": [Function],
                              "onMenuClose": [Function],
                              "onMenuOpen": [Function],
                              "openMenuOnClick": true,
                              "openMenuOnFocus": false,
                              "options": Array [],
                              "pageSize": 5,
                              "placeholder": "Select...",
                              "screenReaderStatus": [Function],
                              "styles": Object {},
                              "tabIndex": "0",
                              "tabSelectsValue": true,
                              "value": null,
                            }
                          }
                          spellCheck="false"
                          tabIndex="0"
                          theme={
                            Object {
                              "borderRadius": 4,
                              "colors": Object {
                                "danger": "#DE350B",
                                "dangerLight": "#FFBDAD",
                                "neutral0": "hsl(0, 0%, 100%)",
                                "neutral10": "hsl(0, 0%, 90%)",
                                "neutral20": "hsl(0, 0%, 80%)",
                                "neutral30": "hsl(0, 0%, 70%)",
                                "neutral40": "hsl(0, 0%, 60%)",
                                "neutral5": "hsl(0, 0%, 95%)",
                                "neutral50": "hsl(0, 0%, 50%)",
                                "neutral60": "hsl(0, 0%, 40%)",
                                "neutral70": "hsl(0, 0%, 30%)",
                                "neutral80": "hsl(0, 0%, 20%)",
                                "neutral90": "hsl(0, 0%, 10%)",
                                "primary": "#2684FF",
                                "primary25": "#DEEBFF",
                                "primary50": "#B2D4FF",
                                "primary75": "#4C9AFF",
                              },
                              "spacing": Object {
                                "baseUnit": 4,
                                "controlHeight": 38,
                                "menuGutter": 8,
                              },
                            }
                          }
                          type="text"
                          value=""
                        >
                          <ForwardRef(render)
                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                            css={
                              Object {
                                "boxSizing": "border-box",
                                "color": "hsl(0, 0%, 20%)",
                                "margin": 2,
                                "paddingBottom": 2,
                                "paddingTop": 2,
                                "visibility": "visible",
                              }
                            }
                          >
                            <div
                              className="css-w8afj7-Input"
                            >
                              <AutosizeInput
                                aria-autocomplete="list"
                                autoCapitalize="none"
                                autoComplete="off"
                                autoCorrect="off"
                                className=""
                                disabled={false}
                                id="react-select-2-input"
                                injectStyles={true}
                                inputRef={[Function]}
                                inputStyle={
                                  Object {
                                    "background": 0,
                                    "border": 0,
                                    "color": "inherit",
                                    "fontSize": "inherit",
                                    "opacity": 1,
                                    "outline": 0,
                                    "padding": 0,
                                  }
                                }
                                minWidth={1}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                spellCheck="false"
                                tabIndex="0"
                                type="text"
                                value=""
                              >
                                <div
                                  className=""
                                  style={
                                    Object {
                                      "display": "inline-block",
                                    }
                                  }
                                >
                                  <input
                                    aria-autocomplete="list"
                                    autoCapitalize="none"
                                    autoComplete="off"
                                    autoCorrect="off"
                                    disabled={false}
                                    id="react-select-2-input"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    spellCheck="false"
                                    style={
                                      Object {
                                        "background": 0,
                                        "border": 0,
                                        "boxSizing": "content-box",
                                        "color": "inherit",
                                        "fontSize": "inherit",
                                        "opacity": 1,
                                        "outline": 0,
                                        "padding": 0,
                                        "width": "2px",
                                      }
                                    }
                                    tabIndex="0"
                                    type="text"
                                    value=""
                                  />
                                  <div
                                    style={
                                      Object {
                                        "height": 0,
                                        "left": 0,
                                        "overflow": "scroll",
                                        "position": "absolute",
                                        "top": 0,
                                        "visibility": "hidden",
                                        "whiteSpace": "pre",
                                      }
                                    }
                                  />
                                </div>
                              </AutosizeInput>
                            </div>
                          </ForwardRef(render)>
                        </Input>
                      </div>
                    </ForwardRef(render)>
                  </ValueContainer>
                  <IndicatorsContainer
                    clearValue={[Function]}
                    cx={[Function]}
                    getStyles={[Function]}
                    getValue={[Function]}
                    hasValue={false}
                    isDisabled={false}
                    isMulti={false}
                    isRtl={false}
                    options={Array []}
                    selectOption={[Function]}
                    selectProps={
                      Object {
                        "backspaceRemovesValue": true,
                        "blurInputOnSelect": true,
                        "cacheOptions": false,
                        "captureMenuScroll": false,
                        "closeMenuOnScroll": false,
                        "closeMenuOnSelect": true,
                        "components": Object {},
                        "controlShouldRenderValue": true,
                        "defaultInputValue": "",
                        "defaultMenuIsOpen": false,
                        "defaultOptions": false,
                        "defaultValue": null,
                        "escapeClearsValue": false,
                        "filterOption": null,
                        "formatGroupLabel": [Function],
                        "getOptionLabel": [Function],
                        "getOptionValue": [Function],
                        "inputValue": "",
                        "isDisabled": false,
                        "isLoading": false,
                        "isMulti": false,
                        "isOptionDisabled": [Function],
                        "isRtl": false,
                        "isSearchable": true,
                        "loadingMessage": [Function],
                        "maxMenuHeight": 300,
                        "menuIsOpen": false,
                        "menuPlacement": "bottom",
                        "menuPosition": "absolute",
                        "menuShouldBlockScroll": false,
                        "menuShouldScrollIntoView": true,
                        "minMenuHeight": 140,
                        "noOptionsMessage": [Function],
                        "onChange": [Function],
                        "onInputChange": [Function],
                        "onMenuClose": [Function],
                        "onMenuOpen": [Function],
                        "openMenuOnClick": true,
                        "openMenuOnFocus": false,
                        "options": Array [],
                        "pageSize": 5,
                        "placeholder": "Select...",
                        "screenReaderStatus": [Function],
                        "styles": Object {},
                        "tabIndex": "0",
                        "tabSelectsValue": true,
                        "value": null,
                      }
                    }
                    setValue={[Function]}
                    theme={
                      Object {
                        "borderRadius": 4,
                        "colors": Object {
                          "danger": "#DE350B",
                          "dangerLight": "#FFBDAD",
                          "neutral0": "hsl(0, 0%, 100%)",
                          "neutral10": "hsl(0, 0%, 90%)",
                          "neutral20": "hsl(0, 0%, 80%)",
                          "neutral30": "hsl(0, 0%, 70%)",
                          "neutral40": "hsl(0, 0%, 60%)",
                          "neutral5": "hsl(0, 0%, 95%)",
                          "neutral50": "hsl(0, 0%, 50%)",
                          "neutral60": "hsl(0, 0%, 40%)",
                          "neutral70": "hsl(0, 0%, 30%)",
                          "neutral80": "hsl(0, 0%, 20%)",
                          "neutral90": "hsl(0, 0%, 10%)",
                          "primary": "#2684FF",
                          "primary25": "#DEEBFF",
                          "primary50": "#B2D4FF",
                          "primary75": "#4C9AFF",
                        },
                        "spacing": Object {
                          "baseUnit": 4,
                          "controlHeight": 38,
                          "menuGutter": 8,
                        },
                      }
                    }
                  >
                    <ForwardRef(render)
                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                      className=""
                      css={
                        Object {
                          "alignItems": "center",
                          "alignSelf": "stretch",
                          "boxSizing": "border-box",
                          "display": "flex",
                          "flexShrink": 0,
                        }
                      }
                    >
                      <div
                        className=" css-1g48xl4-IndicatorsContainer"
                      >
                        <IndicatorSeparator
                          clearValue={[Function]}
                          cx={[Function]}
                          getStyles={[Function]}
                          getValue={[Function]}
                          hasValue={false}
                          isDisabled={false}
                          isFocused={false}
                          isMulti={false}
                          isRtl={false}
                          options={Array []}
                          selectOption={[Function]}
                          selectProps={
                            Object {
                              "backspaceRemovesValue": true,
                              "blurInputOnSelect": true,
                              "cacheOptions": false,
                              "captureMenuScroll": false,
                              "closeMenuOnScroll": false,
                              "closeMenuOnSelect": true,
                              "components": Object {},
                              "controlShouldRenderValue": true,
                              "defaultInputValue": "",
                              "defaultMenuIsOpen": false,
                              "defaultOptions": false,
                              "defaultValue": null,
                              "escapeClearsValue": false,
                              "filterOption": null,
                              "formatGroupLabel": [Function],
                              "getOptionLabel": [Function],
                              "getOptionValue": [Function],
                              "inputValue": "",
                              "isDisabled": false,
                              "isLoading": false,
                              "isMulti": false,
                              "isOptionDisabled": [Function],
                              "isRtl": false,
                              "isSearchable": true,
                              "loadingMessage": [Function],
                              "maxMenuHeight": 300,
                              "menuIsOpen": false,
                              "menuPlacement": "bottom",
                              "menuPosition": "absolute",
                              "menuShouldBlockScroll": false,
                              "menuShouldScrollIntoView": true,
                              "minMenuHeight": 140,
                              "noOptionsMessage": [Function],
                              "onChange": [Function],
                              "onInputChange": [Function],
                              "onMenuClose": [Function],
                              "onMenuOpen": [Function],
                              "openMenuOnClick": true,
                              "openMenuOnFocus": false,
                              "options": Array [],
                              "pageSize": 5,
                              "placeholder": "Select...",
                              "screenReaderStatus": [Function],
                              "styles": Object {},
                              "tabIndex": "0",
                              "tabSelectsValue": true,
                              "value": null,
                            }
                          }
                          setValue={[Function]}
                          theme={
                            Object {
                              "borderRadius": 4,
                              "colors": Object {
                                "danger": "#DE350B",
                                "dangerLight": "#FFBDAD",
                                "neutral0": "hsl(0, 0%, 100%)",
                                "neutral10": "hsl(0, 0%, 90%)",
                                "neutral20": "hsl(0, 0%, 80%)",
                                "neutral30": "hsl(0, 0%, 70%)",
                                "neutral40": "hsl(0, 0%, 60%)",
                                "neutral5": "hsl(0, 0%, 95%)",
                                "neutral50": "hsl(0, 0%, 50%)",
                                "neutral60": "hsl(0, 0%, 40%)",
                                "neutral70": "hsl(0, 0%, 30%)",
                                "neutral80": "hsl(0, 0%, 20%)",
                                "neutral90": "hsl(0, 0%, 10%)",
                                "primary": "#2684FF",
                                "primary25": "#DEEBFF",
                                "primary50": "#B2D4FF",
                                "primary75": "#4C9AFF",
                              },
                              "spacing": Object {
                                "baseUnit": 4,
                                "controlHeight": 38,
                                "menuGutter": 8,
                              },
                            }
                          }
                        >
                          <ForwardRef(render)
                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                            className=""
                            css={
                              Object {
                                "alignSelf": "stretch",
                                "backgroundColor": "hsl(0, 0%, 80%)",
                                "boxSizing": "border-box",
                                "marginBottom": 8,
                                "marginTop": 8,
                                "width": 1,
                              }
                            }
                          >
                            <span
                              className=" css-14o0a0v-IndicatorSeparator"
                            />
                          </ForwardRef(render)>
                        </IndicatorSeparator>
                        <DropdownIndicator
                          clearValue={[Function]}
                          cx={[Function]}
                          getStyles={[Function]}
                          getValue={[Function]}
                          hasValue={false}
                          innerProps={
                            Object {
                              "aria-hidden": "true",
                              "onMouseDown": [Function],
                              "onTouchEnd": [Function],
                            }
                          }
                          isDisabled={false}
                          isFocused={false}
                          isMulti={false}
                          isRtl={false}
                          options={Array []}
                          selectOption={[Function]}
                          selectProps={
                            Object {
                              "backspaceRemovesValue": true,
                              "blurInputOnSelect": true,
                              "cacheOptions": false,
                              "captureMenuScroll": false,
                              "closeMenuOnScroll": false,
                              "closeMenuOnSelect": true,
                              "components": Object {},
                              "controlShouldRenderValue": true,
                              "defaultInputValue": "",
                              "defaultMenuIsOpen": false,
                              "defaultOptions": false,
                              "defaultValue": null,
                              "escapeClearsValue": false,
                              "filterOption": null,
                              "formatGroupLabel": [Function],
                              "getOptionLabel": [Function],
                              "getOptionValue": [Function],
                              "inputValue": "",
                              "isDisabled": false,
                              "isLoading": false,
                              "isMulti": false,
                              "isOptionDisabled": [Function],
                              "isRtl": false,
                              "isSearchable": true,
                              "loadingMessage": [Function],
                              "maxMenuHeight": 300,
                              "menuIsOpen": false,
                              "menuPlacement": "bottom",
                              "menuPosition": "absolute",
                              "menuShouldBlockScroll": false,
                              "menuShouldScrollIntoView": true,
                              "minMenuHeight": 140,
                              "noOptionsMessage": [Function],
                              "onChange": [Function],
                              "onInputChange": [Function],
                              "onMenuClose": [Function],
                              "onMenuOpen": [Function],
                              "openMenuOnClick": true,
                              "openMenuOnFocus": false,
                              "options": Array [],
                              "pageSize": 5,
                              "placeholder": "Select...",
                              "screenReaderStatus": [Function],
                              "styles": Object {},
                              "tabIndex": "0",
                              "tabSelectsValue": true,
                              "value": null,
                            }
                          }
                          setValue={[Function]}
                          theme={
                            Object {
                              "borderRadius": 4,
                              "colors": Object {
                                "danger": "#DE350B",
                                "dangerLight": "#FFBDAD",
                                "neutral0": "hsl(0, 0%, 100%)",
                                "neutral10": "hsl(0, 0%, 90%)",
                                "neutral20": "hsl(0, 0%, 80%)",
                                "neutral30": "hsl(0, 0%, 70%)",
                                "neutral40": "hsl(0, 0%, 60%)",
                                "neutral5": "hsl(0, 0%, 95%)",
                                "neutral50": "hsl(0, 0%, 50%)",
                                "neutral60": "hsl(0, 0%, 40%)",
                                "neutral70": "hsl(0, 0%, 30%)",
                                "neutral80": "hsl(0, 0%, 20%)",
                                "neutral90": "hsl(0, 0%, 10%)",
                                "primary": "#2684FF",
                                "primary25": "#DEEBFF",
                                "primary50": "#B2D4FF",
                                "primary75": "#4C9AFF",
                              },
                              "spacing": Object {
                                "baseUnit": 4,
                                "controlHeight": 38,
                                "menuGutter": 8,
                              },
                            }
                          }
                        >
                          <ForwardRef(render)
                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                            aria-hidden="true"
                            className=""
                            css={
                              Object {
                                ":hover": Object {
                                  "color": "hsl(0, 0%, 60%)",
                                },
                                "boxSizing": "border-box",
                                "color": "hsl(0, 0%, 80%)",
                                "display": "flex",
                                "padding": 8,
                                "transition": "color 150ms",
                              }
                            }
                            onMouseDown={[Function]}
                            onTouchEnd={[Function]}
                          >
                            <div
                              aria-hidden="true"
                              className=" css-1qqp9jx-DropdownIndicator"
                              onMouseDown={[Function]}
                              onTouchEnd={[Function]}
                            >
                              <DownChevron>
                                <Svg
                                  size={20}
                                >
                                  <ForwardRef(render)
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                    aria-hidden="true"
                                    css={
                                      Object {
                                        "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                        "name": "tj5bde-Svg",
                                        "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;label:Svg;",
                                      }
                                    }
                                    focusable="false"
                                    height={20}
                                    viewBox="0 0 20 20"
                                    width={20}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="css-tj5bde-Svg"
                                      focusable="false"
                                      height={20}
                                      viewBox="0 0 20 20"
                                      width={20}
                                    >
                                      <path
                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                      />
                                    </svg>
                                  </ForwardRef(render)>
                                </Svg>
                              </DownChevron>
                            </div>
                          </ForwardRef(render)>
                        </DropdownIndicator>
                      </div>
                    </ForwardRef(render)>
                  </IndicatorsContainer>
                </div>
              </ForwardRef(render)>
            </Control>
          </div>
        </ForwardRef(render)>
      </SelectContainer>
    </Select>
  </StateManager>
</Async>
`;
